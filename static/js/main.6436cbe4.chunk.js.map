{"version":3,"sources":["styles/global.ts","routes/route.tsx","components/Flexbox/Item/styles.ts","components/Flexbox/Container/styles.ts","components/Flexbox/Container/index.tsx","components/FlexContainerControl/index.tsx","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","Route","isPrivate","Component","component","rest","render","location","to","pathname","state","from","FlexItem","styled","div","alignSelf","css","grow","shrink","basis","FlexContainer","justify","align","wrap","direction","alignContent","Container","ref","children","handleJustify","useCallback","setJustify","handleAlign","setAlign","handleAlignContent","setAlignContent","handleWrap","setWrap","handleDirection","setDirection","useState","useImperativeHandle","forwardRef","FlexContainerControl","refContainer","event","value","target","current","htmlFor","name","onChange","defaultValue","Home","containerRef","useRef","Routes","path","exact","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6436cbe4.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'IBM Plex Mono', monospace;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    display: block;\r\n  }\r\n\r\n  ul {\r\n    list-style: none\r\n  }\r\n\r\n`","import React from 'react'\r\nimport {\r\n  Route as RouteDOM,\r\n  RouteProps as RoutePropsDOM,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\ninterface RouteProps extends RoutePropsDOM {\r\n  isPrivate?: boolean,\r\n  component: React.ComponentType\r\n}\r\n\r\nconst Route: React.FC<RouteProps> = ({ isPrivate = false, component: Component, ...rest }) => {\r\n  return (\r\n    <RouteDOM\r\n      {...rest}\r\n      render={({ location }) => isPrivate ? (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/',\r\n            state: { from: location }\r\n          }}\r\n        />\r\n      ) : (\r\n          <Component />\r\n        )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Route","import styled, { css } from 'styled-components'\r\n\r\nimport { FlexItemProps } from './index'\r\n\r\nexport const FlexItem = styled.div<FlexItemProps>`\r\n  border: 1px solid;\r\n  padding: 5px;\r\n  display: flex;\r\n  ${({ alignSelf }) => css`align-self: ${alignSelf};`}\r\n  ${({ grow }) => css`flex-grow: ${grow};`}\r\n  ${({ shrink }) => css`flex-shrink: ${shrink};`}\r\n  ${({ basis }) => css`flex-basis: ${basis};`}\r\n`","import styled, { css } from 'styled-components'\r\n\r\nexport interface FlexContainerProps {\r\n  direction?: string\r\n  wrap?: string\r\n  justify?: string\r\n  align?: string\r\n  alignContent?: string\r\n}\r\n\r\nexport const FlexContainer = styled.div<FlexContainerProps>`\r\n  height: 30vh;\r\n  background: tomato;\r\n  border: 1px solid;\r\n  display: flex;\r\n  ${({ justify }) => css`justify-content: ${justify};`}\r\n  ${({ align }) => css`align-items: ${align};`}\r\n  ${({ wrap }) => css`flex-wrap: ${wrap};`}\r\n  ${({ direction }) => css`flex-direction: ${direction};`}\r\n  ${({ alignContent }) => css`align-content: ${alignContent};`}\r\n`","import React, { forwardRef, useImperativeHandle, useState, useCallback } from 'react'\r\n\r\nimport { JustifyContent, AlignContent, Wrap, Direction, AlignItems } from '../../../types/types-flex'\r\nimport { FlexItem } from '../Item/styles'\r\nimport { FlexContainer } from './styles'\r\n\r\nexport interface FlexContainerProps {\r\n  handleJustify: (justify: JustifyContent) => void\r\n  handleAlign: (align: AlignItems) => void\r\n  handleAlignContent: (align: AlignContent) => void\r\n  handleWrap: (wrap: Wrap) => void\r\n  handleDirection: (direction: Direction) => void\r\n}\r\n\r\nconst Container: React.ForwardRefRenderFunction<FlexContainerProps> = ({ children }, ref) => {\r\n\r\n  const handleJustify = useCallback((justify: JustifyContent) => {\r\n    setJustify(justify)\r\n  }, [])\r\n\r\n  const handleAlign = useCallback((align: AlignItems) => {\r\n    setAlign(align)\r\n  }, [])\r\n\r\n  const handleAlignContent = useCallback((align: AlignContent) => {\r\n    setAlignContent(align)\r\n  }, [])\r\n\r\n  const handleWrap = useCallback((wrap: Wrap) => {\r\n    setWrap(wrap)\r\n  }, [])\r\n\r\n  const handleDirection = useCallback((direction: Direction) => {\r\n    setDirection(direction)\r\n  }, [])\r\n\r\n  const [justify, setJustify] = useState<JustifyContent>('flex-start')\r\n  const [align, setAlign] = useState<AlignItems>('stretch')\r\n  const [wrap, setWrap] = useState<Wrap>('nowrap')\r\n  const [direction, setDirection] = useState<Direction>('row')\r\n  const [alignContent, setAlignContent] = useState('normal')\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      handleJustify,\r\n      handleAlign,\r\n      handleWrap,\r\n      handleDirection,\r\n      handleAlignContent\r\n    }\r\n  })\r\n\r\n  return (\r\n    <FlexContainer justify={justify} align={align} direction={direction} wrap={wrap} alignContent={alignContent}>\r\n      <FlexItem>1</FlexItem>\r\n      <FlexItem>2</FlexItem>\r\n      <FlexItem>3</FlexItem>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport default forwardRef(Container)","import React, { ChangeEvent, useCallback } from 'react'\r\nimport { AlignContent, AlignItems, JustifyContent, Wrap, Direction } from '../../types/types-flex'\r\n\r\nimport { FlexContainerProps } from '../Flexbox/Container'\r\n\r\ninterface FlexContainerControlProps {\r\n  refContainer: React.RefObject<FlexContainerProps>\r\n}\r\n\r\nconst FlexContainerControl: React.FC<FlexContainerControlProps> = ({ refContainer }) => {\r\n\r\n  const handleJustify = useCallback((event: ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value as JustifyContent\r\n    refContainer.current?.handleJustify(value)\r\n  }, [refContainer])\r\n\r\n  const handleAlign = useCallback((event: ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value as AlignItems\r\n    refContainer.current?.handleAlign(value)\r\n  }, [refContainer])\r\n\r\n  const handleAlignContent = useCallback((event: ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value as AlignContent\r\n    refContainer.current?.handleAlignContent(value)\r\n  }, [refContainer])\r\n\r\n  const handleWrap = useCallback((event: ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value as Wrap\r\n    refContainer.current?.handleWrap(value)\r\n  }, [refContainer])\r\n\r\n  const handleDirection = useCallback((event: ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value as Direction\r\n    refContainer.current?.handleDirection(value)\r\n  }, [refContainer])\r\n\r\n  return (\r\n    <>\r\n      <h1>Control</h1>\r\n\r\n      <div>\r\n        <label htmlFor=\"direction-select\">Justify</label>\r\n        <select\r\n          name=\"direction-select\"\r\n          onChange={handleDirection}\r\n        >\r\n          <option value=\"row\">row</option>\r\n          <option value=\"column\">column</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"justify-select\">Justify</label>\r\n        <select\r\n          name=\"justify-select\"\r\n          onChange={handleJustify}\r\n        >\r\n          <option value=\"flex-start\">start</option>\r\n          <option value=\"center\">center</option>\r\n          <option value=\"flex-end\">end</option>\r\n          <option value=\"space-between\">space-between</option>\r\n          <option value=\"space-around\">space-around</option>\r\n          <option value=\"space-evenly\">space-evenly</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"align-select\">Align Items</label>\r\n        <select\r\n          name=\"align-select\"\r\n          onChange={handleAlign}\r\n        >\r\n          <option value=\"stretch\" defaultValue=\"stretch\">stretch</option>\r\n          <option value=\"flex-start\">start</option>\r\n          <option value=\"center\">center</option>\r\n          <option value=\"flex-end\">end</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"alignContent-select\">Align Content</label>\r\n        <select\r\n          name=\"alignContent-select\"\r\n          onChange={handleAlignContent}\r\n        >\r\n          <option value=\"normal\">normal</option>\r\n          <option value=\"flex-start\">start</option>\r\n          <option value=\"center\">center</option>\r\n          <option value=\"flex-end\">end</option>\r\n          <option value=\"stretch\">stretch</option>\r\n          <option value=\"space-around\">space-around</option>\r\n          <option value=\"space-between\">space-between</option>\r\n          <option value=\"space-evenly\">space-evenly</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"align-select\">Wrap</label>\r\n        <select\r\n          name=\"wrap-select\"\r\n          onChange={handleWrap}\r\n        >\r\n          <option value=\"nowrap\">nowrap</option>\r\n          <option value=\"wrap\">wrap</option>\r\n        </select>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FlexContainerControl","import React, { useRef } from 'react'\r\n\r\nimport Container, { FlexContainerProps } from '../../components/Flexbox/Container'\r\nimport FlexContainerControl from '../../components/FlexContainerControl'\r\n\r\nconst Home: React.FC = () => {\r\n\r\n  const containerRef = useRef<FlexContainerProps>(null)\r\n\r\n  return (\r\n    <>\r\n      <FlexContainerControl refContainer={containerRef} />\r\n      <Container ref={containerRef}></Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nimport Route from './route'\r\nimport Home from '../pages/Home'\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route component={Home} path=\"/\" exact />\r\n      <Route component={Home} path=\"/Flexbox-Viewer\" />\r\n    </Switch>\r\n  )\r\n}\r\nexport default Routes","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport GlobalStyle from './styles/global'\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Routes />\n      </Router>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}