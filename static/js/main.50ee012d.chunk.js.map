{"version":3,"sources":["styles/global.ts","routes/route.tsx","components/Flexbox/Item/styles.ts","components/Flexbox/Container/styles.ts","components/Flexbox/Container/index.tsx","components/FlexContainerControl/index.tsx","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","Route","isPrivate","Component","component","rest","render","location","to","pathname","state","from","FlexItem","styled","div","alignSelf","css","grow","shrink","basis","FlexContainer","justify","align","wrap","direction","Container","ref","children","handleJustify","useCallback","setJustify","handleAlign","setAlign","handleWrap","setWrap","handleDirection","setDirection","useState","useImperativeHandle","forwardRef","FlexContainerControl","refContainer","event","value","target","current","name","onChange","Home","containerRef","useRef","Routes","path","exact","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50ee012d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'IBM Plex Mono', monospace;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    display: block;\r\n  }\r\n\r\n  ul {\r\n    list-style: none\r\n  }\r\n\r\n`","import React from 'react'\r\nimport {\r\n  Route as RouteDOM,\r\n  RouteProps as RoutePropsDOM,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\ninterface RouteProps extends RoutePropsDOM {\r\n  isPrivate?: boolean,\r\n  component: React.ComponentType\r\n}\r\n\r\nconst Route: React.FC<RouteProps> = ({ isPrivate = false, component: Component, ...rest }) => {\r\n  return (\r\n    <RouteDOM\r\n      {...rest}\r\n      render={({ location }) => isPrivate ? (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/',\r\n            state: { from: location }\r\n          }}\r\n        />\r\n      ) : (\r\n          <Component />\r\n        )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Route","import styled, { css } from 'styled-components'\r\n\r\nimport { FlexItemProps } from './index'\r\n\r\nexport const FlexItem = styled.div<FlexItemProps>`\r\n  border: 1px solid;\r\n  padding: 5px;\r\n  display: flex;\r\n  ${({ alignSelf }) => css`align-self: ${alignSelf};`}\r\n  ${({ grow }) => css`flex-grow: ${grow};`}\r\n  ${({ shrink }) => css`flex-shrink: ${shrink};`}\r\n  ${({ basis }) => css`flex-basis: ${basis};`}\r\n`","import styled, { css } from 'styled-components'\r\n\r\nexport interface FlexContainerProps {\r\n  direction?: string\r\n  wrap?: string\r\n  justify?: string\r\n  align?: string\r\n}\r\n\r\nexport const FlexContainer = styled.div<FlexContainerProps>`\r\n  background: tomato;\r\n  border: 1px solid;\r\n  display: flex;\r\n  ${({ justify }) => css`justify-content: ${justify};`}\r\n  ${({ align }) => css`align-items: ${align};`}\r\n  ${({ wrap }) => css`align-items: ${wrap};`}\r\n  ${({ direction }) => css`align-items: ${direction};`}\r\n`","import React, { forwardRef, useImperativeHandle, useState, useCallback } from 'react'\r\n\r\nimport { JustifyContent, AlignContent, Wrap, Direction } from '../../../types/types-flex'\r\nimport { FlexItem } from '../Item/styles'\r\nimport { FlexContainer } from './styles'\r\n\r\nexport interface FlexContainerProps {\r\n  handleJustify: (justify: JustifyContent) => void\r\n}\r\n\r\nconst Container: React.ForwardRefRenderFunction<FlexContainerProps> = ({ children }, ref) => {\r\n\r\n  const handleJustify = useCallback((justify: JustifyContent) => {\r\n    setJustify(justify)\r\n  }, [])\r\n\r\n  const handleAlign = useCallback((align: AlignContent) => {\r\n    setAlign(align)\r\n  }, [])\r\n\r\n  const handleWrap = useCallback((wrap: Wrap) => {\r\n    setWrap(wrap)\r\n  }, [])\r\n\r\n  const handleDirection = useCallback((direction: Direction) => {\r\n    setDirection(direction)\r\n  }, [])\r\n\r\n  const [justify, setJustify] = useState<JustifyContent>('flex-start')\r\n  const [align, setAlign] = useState<AlignContent>('stretch')\r\n  const [wrap, setWrap] = useState<Wrap>('nowrap')\r\n  const [direction, setDirection] = useState<Direction>('row')\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      handleJustify,\r\n      handleAlign,\r\n      handleWrap,\r\n      handleDirection\r\n    }\r\n  })\r\n\r\n  return (\r\n    <FlexContainer justify={justify} align={align} direction={direction} wrap={wrap}>\r\n      <FlexItem>1</FlexItem>\r\n      <FlexItem>2</FlexItem>\r\n      <FlexItem>3</FlexItem>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport default forwardRef(Container)","import React, { ChangeEvent, useCallback } from 'react'\r\nimport { JustifyContent } from '../../types/types-flex'\r\n\r\nimport { FlexContainerProps } from '../Flexbox/Container'\r\n\r\ninterface FlexContainerControlProps {\r\n  refContainer: React.RefObject<FlexContainerProps>\r\n}\r\n\r\nconst FlexContainerControl: React.FC<FlexContainerControlProps> = ({ refContainer }) => {\r\n\r\n  const handleJustify = useCallback((event: ChangeEvent) => {\r\n    const value = (event.target as HTMLInputElement).value as JustifyContent\r\n    refContainer.current?.handleJustify(value)\r\n  }, [refContainer])\r\n\r\n  return (\r\n    <>\r\n      <h1>Control</h1>\r\n      <select\r\n        name=\"justify-select\"\r\n        onChange={handleJustify}\r\n      >\r\n        <option value=\"flex-start\">start</option>\r\n        <option value=\"center\">center</option>\r\n        <option value=\"flex-end\">end</option>\r\n        <option value=\"space-between\">space-between</option>\r\n        <option value=\"space-around\">space-around</option>\r\n        <option value=\"space-evenly\">space-evenly</option>\r\n      </select>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FlexContainerControl","import React, { useRef } from 'react'\r\n\r\nimport Container, { FlexContainerProps } from '../../components/Flexbox/Container'\r\nimport FlexContainerControl from '../../components/FlexContainerControl'\r\n\r\nconst Home: React.FC = () => {\r\n\r\n  const containerRef = useRef<FlexContainerProps>(null)\r\n\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n      <FlexContainerControl refContainer={containerRef} />\r\n      <Container ref={containerRef}></Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nimport Route from './route'\r\nimport Home from '../pages/Home'\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route component={Home} path=\"/\" exact />\r\n      <Route component={Home} path=\"/Flexbox-Viewer\" />\r\n    </Switch>\r\n  )\r\n}\r\nexport default Routes","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport GlobalStyle from './styles/global'\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Routes />\n      </Router>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}